parseUnit(main)
  skipErrorTokens(main)
  listener: beginCompilationUnit(main)
  syntheticPreviousToken(main)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(main)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(main)
      isReservedKeyword(()
      parseTopLevelMethod(, null, null, , Instance of 'NoType', null, main, false)
        listener: beginTopLevelMethod(, null, null)
        listener: handleNoType()
        ensureIdentifierPotentiallyRecovered(, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(main, topLevelFunctionDeclaration)
        parseMethodTypeVar(main)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(main, main, false, MemberKind.TopLevelMethod)
          parseFormalParameters(main, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, var)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclarationAfterModifiers(var, {, null, var, null, null)
                skipOuterPattern(var)
                listener: beginMetadataStar(var)
                listener: endMetadataStar(0)
                parsePatternVariableDeclarationStatement(var, {, var)
                  parsePattern(var, PatternContext.declaration, precedence: 1)
                    parsePrimaryPattern(var, PatternContext.declaration)
                      parseParenthesizedPatternOrRecordPattern(var, PatternContext.declaration)
                        parsePattern((, PatternContext.declaration, precedence: 1)
                          parsePrimaryPattern((, PatternContext.declaration)
                            parseParenthesizedPatternOrRecordPattern((, PatternContext.declaration)
                              parsePattern((, PatternContext.declaration, precedence: 1)
                                parsePrimaryPattern((, PatternContext.declaration)
                                  parseVariablePattern((, PatternContext.declaration, typeInfo: Instance of 'NoType')
                                    listener: handleNoType(()
                                    listener: handleVariablePattern(null, a1, false)
                              listener: handlePatternField(null)
                              ensureCloseParen(,, ()
                              listener: handleRecordPattern((, 1)
                        listener: handlePatternField(null)
                        ensureCloseParen(,, ()
                        listener: handleRecordPattern((, 1)
                  parseExpression(=)
                    looksLikeOuterPatternEquals(=)
                      skipOuterPattern(=)
                    parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                      parseUnaryExpression(=, true, ConstantPatternContext.none)
                        parsePrimary(=, expression, ConstantPatternContext.none)
                          parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                            parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                              listener: beginParenthesizedExpressionOrRecordLiteral(()
                              parseExpression(()
                                looksLikeOuterPatternEquals(()
                                  skipOuterPattern(()
                                parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                  parseUnaryExpression((, true, ConstantPatternContext.none)
                                    parsePrimary((, expression, ConstantPatternContext.none)
                                      parseParenthesizedExpressionFunctionLiteralOrRecordLiteral((, ConstantPatternContext.none)
                                        parseParenthesizedExpressionOrRecordLiteral((, null, ConstantPatternContext.none)
                                          listener: beginParenthesizedExpressionOrRecordLiteral(()
                                          parseExpression(()
                                            looksLikeOuterPatternEquals(()
                                              skipOuterPattern(()
                                            parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                              parseUnaryExpression((, true, ConstantPatternContext.none)
                                                parsePrecedenceExpression(-, 16, true, ConstantPatternContext.none)
                                                  parseUnaryExpression(-, true, ConstantPatternContext.none)
                                                    parsePrimary(-, expression, ConstantPatternContext.none)
                                                      parseLiteralInt(-)
                                                        listener: handleLiteralInt(1)
                                                listener: handleUnaryPrefixExpression(-)
                                          ensureCloseParen(,, ()
                                          listener: endRecordLiteral((, 1, null)
                              ensureCloseParen(,, ()
                              listener: endRecordLiteral((, 1, null)
                  ensureSemicolon())
                  listener: handlePatternVariableDeclarationStatement(var, =, ;)
          notEofOrValue(}, var)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(var, ;, null, var, null, null)
                skipOuterPattern(var)
                listener: beginMetadataStar(var)
                listener: endMetadataStar(0)
                parsePatternVariableDeclarationStatement(var, ;, var)
                  parsePattern(var, PatternContext.declaration, precedence: 1)
                    parsePrimaryPattern(var, PatternContext.declaration)
                      parseParenthesizedPatternOrRecordPattern(var, PatternContext.declaration)
                        ensureIdentifier((, namedRecordFieldReference)
                          listener: handleIdentifier(n, namedRecordFieldReference)
                        parsePattern(:, PatternContext.declaration, precedence: 1)
                          parsePrimaryPattern(:, PatternContext.declaration)
                            parseParenthesizedPatternOrRecordPattern(:, PatternContext.declaration)
                              ensureIdentifier((, namedRecordFieldReference)
                                listener: handleIdentifier(x, namedRecordFieldReference)
                              parsePattern(:, PatternContext.declaration, precedence: 1)
                                parsePrimaryPattern(:, PatternContext.declaration)
                                  parseVariablePattern(:, PatternContext.declaration, typeInfo: Instance of 'NoType')
                                    listener: handleNoType(:)
                                    listener: handleVariablePattern(null, a2, false)
                              listener: handlePatternField(:)
                              ensureCloseParen(a2, ()
                              listener: handleRecordPattern((, 1)
                        listener: handlePatternField(:)
                        ensureCloseParen(), ()
                        listener: handleRecordPattern((, 1)
                  parseExpression(=)
                    looksLikeOuterPatternEquals(=)
                      skipOuterPattern(=)
                    parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                      parseUnaryExpression(=, true, ConstantPatternContext.none)
                        parsePrimary(=, expression, ConstantPatternContext.none)
                          parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                            parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                              listener: beginParenthesizedExpressionOrRecordLiteral(()
                              ensureIdentifier((, namedRecordFieldReference)
                                listener: handleIdentifier(n, namedRecordFieldReference)
                              parseExpression(:)
                                looksLikeOuterPatternEquals(:)
                                  skipOuterPattern(:)
                                parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                  parseUnaryExpression(:, true, ConstantPatternContext.none)
                                    parsePrimary(:, expression, ConstantPatternContext.none)
                                      parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(:, ConstantPatternContext.none)
                                        parseParenthesizedExpressionOrRecordLiteral(:, null, ConstantPatternContext.none)
                                          listener: beginParenthesizedExpressionOrRecordLiteral(()
                                          ensureIdentifier((, namedRecordFieldReference)
                                            listener: handleIdentifier(x, namedRecordFieldReference)
                                          parseExpression(:)
                                            looksLikeOuterPatternEquals(:)
                                              skipOuterPattern(:)
                                            parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                              parseUnaryExpression(:, true, ConstantPatternContext.none)
                                                parsePrimary(:, expression, ConstantPatternContext.none)
                                                  parseLiteralInt(:)
                                                    listener: handleLiteralInt(42)
                                          listener: handleNamedRecordField(:)
                                          ensureCloseParen(42, ()
                                          listener: endRecordLiteral((, 1, null)
                              listener: handleNamedRecordField(:)
                              ensureCloseParen(), ()
                              listener: endRecordLiteral((, 1, null)
                  ensureSemicolon())
                  listener: handlePatternVariableDeclarationStatement(var, =, ;)
          notEofOrValue(}, var)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(var, ;, null, var, null, null)
                skipOuterPattern(var)
                listener: beginMetadataStar(var)
                listener: endMetadataStar(0)
                parsePatternVariableDeclarationStatement(var, ;, var)
                  parsePattern(var, PatternContext.declaration, precedence: 1)
                    parsePrimaryPattern(var, PatternContext.declaration)
                      parseParenthesizedPatternOrRecordPattern(var, PatternContext.declaration)
                        ensureIdentifier((, namedRecordFieldReference)
                          listener: handleIdentifier(n, namedRecordFieldReference)
                        parsePattern(:, PatternContext.declaration, precedence: 1)
                          parsePrimaryPattern(:, PatternContext.declaration)
                            parseParenthesizedPatternOrRecordPattern(:, PatternContext.declaration)
                              ensureIdentifier((, namedRecordFieldReference)
                                listener: handleIdentifier(x, namedRecordFieldReference)
                              parsePattern(:, PatternContext.declaration, precedence: 1)
                                parsePrimaryPattern(:, PatternContext.declaration)
                                  parseVariablePattern(:, PatternContext.declaration, typeInfo: Instance of 'NoType')
                                    listener: handleNoType(:)
                                    listener: handleVariablePattern(null, a3, false)
                              listener: handlePatternField(:)
                              parsePattern(,, PatternContext.declaration, precedence: 1)
                                parsePrimaryPattern(,, PatternContext.declaration)
                                  parseVariablePattern(,, PatternContext.declaration, typeInfo: Instance of 'NoType')
                                    listener: handleNoType(,)
                                    listener: handleVariablePattern(null, b3, false)
                              listener: handlePatternField(null)
                              ensureCloseParen(b3, ()
                              listener: handleRecordPattern((, 2)
                        listener: handlePatternField(:)
                        parsePattern(,, PatternContext.declaration, precedence: 1)
                          parsePrimaryPattern(,, PatternContext.declaration)
                            parseParenthesizedPatternOrRecordPattern(,, PatternContext.declaration)
                              ensureIdentifier((, namedRecordFieldReference)
                                listener: handleIdentifier(y, namedRecordFieldReference)
                              parsePattern(:, PatternContext.declaration, precedence: 1)
                                parsePrimaryPattern(:, PatternContext.declaration)
                                  parseVariablePattern(:, PatternContext.declaration, typeInfo: Instance of 'NoType')
                                    listener: handleNoType(:)
                                    listener: handleVariablePattern(null, c3, false)
                              listener: handlePatternField(:)
                              parsePattern(,, PatternContext.declaration, precedence: 1)
                                parsePrimaryPattern(,, PatternContext.declaration)
                                  parseVariablePattern(,, PatternContext.declaration, typeInfo: Instance of 'NoType')
                                    listener: handleNoType(,)
                                    listener: handleVariablePattern(null, d3, false)
                              listener: handlePatternField(null)
                              ensureCloseParen(d3, ()
                              listener: handleRecordPattern((, 2)
                        listener: handlePatternField(null)
                        ensureCloseParen(), ()
                        listener: handleRecordPattern((, 2)
                  parseExpression(=)
                    looksLikeOuterPatternEquals(=)
                      skipOuterPattern(=)
                    parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                      parseUnaryExpression(=, true, ConstantPatternContext.none)
                        parsePrimary(=, expression, ConstantPatternContext.none)
                          parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                            parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                              listener: beginParenthesizedExpressionOrRecordLiteral(()
                              ensureIdentifier((, namedRecordFieldReference)
                                listener: handleIdentifier(n, namedRecordFieldReference)
                              parseExpression(:)
                                looksLikeOuterPatternEquals(:)
                                  skipOuterPattern(:)
                                parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                  parseUnaryExpression(:, true, ConstantPatternContext.none)
                                    parsePrimary(:, expression, ConstantPatternContext.none)
                                      parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(:, ConstantPatternContext.none)
                                        parseParenthesizedExpressionOrRecordLiteral(:, null, ConstantPatternContext.none)
                                          listener: beginParenthesizedExpressionOrRecordLiteral(()
                                          ensureIdentifier((, namedRecordFieldReference)
                                            listener: handleIdentifier(x, namedRecordFieldReference)
                                          parseExpression(:)
                                            looksLikeOuterPatternEquals(:)
                                              skipOuterPattern(:)
                                            parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                              parseUnaryExpression(:, true, ConstantPatternContext.none)
                                                parsePrimary(:, expression, ConstantPatternContext.none)
                                                  parseLiteralInt(:)
                                                    listener: handleLiteralInt(42)
                                          listener: handleNamedRecordField(:)
                                          parseExpression(,)
                                            looksLikeOuterPatternEquals(,)
                                              skipOuterPattern(,)
                                            parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                              parseUnaryExpression(,, true, ConstantPatternContext.none)
                                                parsePrecedenceExpression(-, 16, true, ConstantPatternContext.none)
                                                  parseUnaryExpression(-, true, ConstantPatternContext.none)
                                                    parsePrimary(-, expression, ConstantPatternContext.none)
                                                      parseLiteralInt(-)
                                                        listener: handleLiteralInt(1)
                                                listener: handleUnaryPrefixExpression(-)
                                          ensureCloseParen(1, ()
                                          listener: endRecordLiteral((, 2, null)
                              listener: handleNamedRecordField(:)
                              parseExpression(,)
                                looksLikeOuterPatternEquals(,)
                                  skipOuterPattern(,)
                                parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                  parseUnaryExpression(,, true, ConstantPatternContext.none)
                                    parsePrimary(,, expression, ConstantPatternContext.none)
                                      parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(,, ConstantPatternContext.none)
                                        parseParenthesizedExpressionOrRecordLiteral(,, null, ConstantPatternContext.none)
                                          listener: beginParenthesizedExpressionOrRecordLiteral(()
                                          ensureIdentifier((, namedRecordFieldReference)
                                            listener: handleIdentifier(y, namedRecordFieldReference)
                                          parseExpression(:)
                                            looksLikeOuterPatternEquals(:)
                                              skipOuterPattern(:)
                                            parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                              parseUnaryExpression(:, true, ConstantPatternContext.none)
                                                parsePrimary(:, expression, ConstantPatternContext.none)
                                                  parseLiteralInt(:)
                                                    listener: handleLiteralInt(1)
                                          listener: handleNamedRecordField(:)
                                          parseExpression(,)
                                            looksLikeOuterPatternEquals(,)
                                              skipOuterPattern(,)
                                            parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                              parseUnaryExpression(,, true, ConstantPatternContext.none)
                                                parsePrimary(,, expression, ConstantPatternContext.none)
                                                  parseLiteralInt(,)
                                                    listener: handleLiteralInt(0)
                                          ensureCloseParen(0, ()
                                          listener: endRecordLiteral((, 2, null)
                              ensureCloseParen(), ()
                              listener: endRecordLiteral((, 2, null)
                  ensureSemicolon())
                  listener: handlePatternVariableDeclarationStatement(var, =, ;)
          notEofOrValue(}, final)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(final, ;, null, final, null, null)
                skipOuterPattern(final)
                listener: beginMetadataStar(final)
                listener: endMetadataStar(0)
                parsePatternVariableDeclarationStatement(final, ;, final)
                  parsePattern(final, PatternContext.declaration, precedence: 1)
                    parsePrimaryPattern(final, PatternContext.declaration)
                      parseParenthesizedPatternOrRecordPattern(final, PatternContext.declaration)
                        parsePattern((, PatternContext.declaration, precedence: 1)
                          parsePrimaryPattern((, PatternContext.declaration)
                            parseParenthesizedPatternOrRecordPattern((, PatternContext.declaration)
                              parsePattern((, PatternContext.declaration, precedence: 1)
                                parsePrimaryPattern((, PatternContext.declaration)
                                  parseVariablePattern((, PatternContext.declaration, typeInfo: Instance of 'NoType')
                                    listener: handleNoType(()
                                    listener: handleVariablePattern(null, a4, false)
                              listener: handlePatternField(null)
                              ensureCloseParen(,, ()
                              listener: handleRecordPattern((, 1)
                        listener: handlePatternField(null)
                        ensureCloseParen(,, ()
                        listener: handleRecordPattern((, 1)
                  parseExpression(=)
                    looksLikeOuterPatternEquals(=)
                      skipOuterPattern(=)
                    parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                      parseUnaryExpression(=, true, ConstantPatternContext.none)
                        parsePrimary(=, expression, ConstantPatternContext.none)
                          parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                            parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                              listener: beginParenthesizedExpressionOrRecordLiteral(()
                              parseExpression(()
                                looksLikeOuterPatternEquals(()
                                  skipOuterPattern(()
                                parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                  parseUnaryExpression((, true, ConstantPatternContext.none)
                                    parsePrimary((, expression, ConstantPatternContext.none)
                                      parseParenthesizedExpressionFunctionLiteralOrRecordLiteral((, ConstantPatternContext.none)
                                        parseParenthesizedExpressionOrRecordLiteral((, null, ConstantPatternContext.none)
                                          listener: beginParenthesizedExpressionOrRecordLiteral(()
                                          parseExpression(()
                                            looksLikeOuterPatternEquals(()
                                              skipOuterPattern(()
                                            parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                              parseUnaryExpression((, true, ConstantPatternContext.none)
                                                parsePrecedenceExpression(-, 16, true, ConstantPatternContext.none)
                                                  parseUnaryExpression(-, true, ConstantPatternContext.none)
                                                    parsePrimary(-, expression, ConstantPatternContext.none)
                                                      parseLiteralInt(-)
                                                        listener: handleLiteralInt(1)
                                                listener: handleUnaryPrefixExpression(-)
                                          ensureCloseParen(,, ()
                                          listener: endRecordLiteral((, 1, null)
                              ensureCloseParen(,, ()
                              listener: endRecordLiteral((, 1, null)
                  ensureSemicolon())
                  listener: handlePatternVariableDeclarationStatement(final, =, ;)
          notEofOrValue(}, final)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(final, ;, null, final, null, null)
                skipOuterPattern(final)
                listener: beginMetadataStar(final)
                listener: endMetadataStar(0)
                parsePatternVariableDeclarationStatement(final, ;, final)
                  parsePattern(final, PatternContext.declaration, precedence: 1)
                    parsePrimaryPattern(final, PatternContext.declaration)
                      parseParenthesizedPatternOrRecordPattern(final, PatternContext.declaration)
                        ensureIdentifier((, namedRecordFieldReference)
                          listener: handleIdentifier(n, namedRecordFieldReference)
                        parsePattern(:, PatternContext.declaration, precedence: 1)
                          parsePrimaryPattern(:, PatternContext.declaration)
                            parseParenthesizedPatternOrRecordPattern(:, PatternContext.declaration)
                              ensureIdentifier((, namedRecordFieldReference)
                                listener: handleIdentifier(x, namedRecordFieldReference)
                              parsePattern(:, PatternContext.declaration, precedence: 1)
                                parsePrimaryPattern(:, PatternContext.declaration)
                                  parseVariablePattern(:, PatternContext.declaration, typeInfo: Instance of 'NoType')
                                    listener: handleNoType(:)
                                    listener: handleVariablePattern(null, a5, false)
                              listener: handlePatternField(:)
                              ensureCloseParen(a5, ()
                              listener: handleRecordPattern((, 1)
                        listener: handlePatternField(:)
                        ensureCloseParen(), ()
                        listener: handleRecordPattern((, 1)
                  parseExpression(=)
                    looksLikeOuterPatternEquals(=)
                      skipOuterPattern(=)
                    parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                      parseUnaryExpression(=, true, ConstantPatternContext.none)
                        parsePrimary(=, expression, ConstantPatternContext.none)
                          parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                            parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                              listener: beginParenthesizedExpressionOrRecordLiteral(()
                              ensureIdentifier((, namedRecordFieldReference)
                                listener: handleIdentifier(n, namedRecordFieldReference)
                              parseExpression(:)
                                looksLikeOuterPatternEquals(:)
                                  skipOuterPattern(:)
                                parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                  parseUnaryExpression(:, true, ConstantPatternContext.none)
                                    parsePrimary(:, expression, ConstantPatternContext.none)
                                      parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(:, ConstantPatternContext.none)
                                        parseParenthesizedExpressionOrRecordLiteral(:, null, ConstantPatternContext.none)
                                          listener: beginParenthesizedExpressionOrRecordLiteral(()
                                          ensureIdentifier((, namedRecordFieldReference)
                                            listener: handleIdentifier(x, namedRecordFieldReference)
                                          parseExpression(:)
                                            looksLikeOuterPatternEquals(:)
                                              skipOuterPattern(:)
                                            parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                              parseUnaryExpression(:, true, ConstantPatternContext.none)
                                                parsePrimary(:, expression, ConstantPatternContext.none)
                                                  parseLiteralInt(:)
                                                    listener: handleLiteralInt(42)
                                          listener: handleNamedRecordField(:)
                                          ensureCloseParen(42, ()
                                          listener: endRecordLiteral((, 1, null)
                              listener: handleNamedRecordField(:)
                              ensureCloseParen(), ()
                              listener: endRecordLiteral((, 1, null)
                  ensureSemicolon())
                  listener: handlePatternVariableDeclarationStatement(final, =, ;)
          notEofOrValue(}, final)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(final, ;, null, final, null, null)
                skipOuterPattern(final)
                listener: beginMetadataStar(final)
                listener: endMetadataStar(0)
                parsePatternVariableDeclarationStatement(final, ;, final)
                  parsePattern(final, PatternContext.declaration, precedence: 1)
                    parsePrimaryPattern(final, PatternContext.declaration)
                      parseParenthesizedPatternOrRecordPattern(final, PatternContext.declaration)
                        ensureIdentifier((, namedRecordFieldReference)
                          listener: handleIdentifier(n, namedRecordFieldReference)
                        parsePattern(:, PatternContext.declaration, precedence: 1)
                          parsePrimaryPattern(:, PatternContext.declaration)
                            parseParenthesizedPatternOrRecordPattern(:, PatternContext.declaration)
                              ensureIdentifier((, namedRecordFieldReference)
                                listener: handleIdentifier(x, namedRecordFieldReference)
                              parsePattern(:, PatternContext.declaration, precedence: 1)
                                parsePrimaryPattern(:, PatternContext.declaration)
                                  parseVariablePattern(:, PatternContext.declaration, typeInfo: Instance of 'NoType')
                                    listener: handleNoType(:)
                                    listener: handleVariablePattern(null, a6, false)
                              listener: handlePatternField(:)
                              parsePattern(,, PatternContext.declaration, precedence: 1)
                                parsePrimaryPattern(,, PatternContext.declaration)
                                  parseVariablePattern(,, PatternContext.declaration, typeInfo: Instance of 'NoType')
                                    listener: handleNoType(,)
                                    listener: handleVariablePattern(null, b6, false)
                              listener: handlePatternField(null)
                              ensureCloseParen(b6, ()
                              listener: handleRecordPattern((, 2)
                        listener: handlePatternField(:)
                        parsePattern(,, PatternContext.declaration, precedence: 1)
                          parsePrimaryPattern(,, PatternContext.declaration)
                            parseParenthesizedPatternOrRecordPattern(,, PatternContext.declaration)
                              ensureIdentifier((, namedRecordFieldReference)
                                listener: handleIdentifier(y, namedRecordFieldReference)
                              parsePattern(:, PatternContext.declaration, precedence: 1)
                                parsePrimaryPattern(:, PatternContext.declaration)
                                  parseVariablePattern(:, PatternContext.declaration, typeInfo: Instance of 'NoType')
                                    listener: handleNoType(:)
                                    listener: handleVariablePattern(null, c6, false)
                              listener: handlePatternField(:)
                              parsePattern(,, PatternContext.declaration, precedence: 1)
                                parsePrimaryPattern(,, PatternContext.declaration)
                                  parseVariablePattern(,, PatternContext.declaration, typeInfo: Instance of 'NoType')
                                    listener: handleNoType(,)
                                    listener: handleVariablePattern(null, d6, false)
                              listener: handlePatternField(null)
                              ensureCloseParen(d6, ()
                              listener: handleRecordPattern((, 2)
                        listener: handlePatternField(null)
                        ensureCloseParen(), ()
                        listener: handleRecordPattern((, 2)
                  parseExpression(=)
                    looksLikeOuterPatternEquals(=)
                      skipOuterPattern(=)
                    parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                      parseUnaryExpression(=, true, ConstantPatternContext.none)
                        parsePrimary(=, expression, ConstantPatternContext.none)
                          parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                            parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                              listener: beginParenthesizedExpressionOrRecordLiteral(()
                              ensureIdentifier((, namedRecordFieldReference)
                                listener: handleIdentifier(n, namedRecordFieldReference)
                              parseExpression(:)
                                looksLikeOuterPatternEquals(:)
                                  skipOuterPattern(:)
                                parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                  parseUnaryExpression(:, true, ConstantPatternContext.none)
                                    parsePrimary(:, expression, ConstantPatternContext.none)
                                      parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(:, ConstantPatternContext.none)
                                        parseParenthesizedExpressionOrRecordLiteral(:, null, ConstantPatternContext.none)
                                          listener: beginParenthesizedExpressionOrRecordLiteral(()
                                          ensureIdentifier((, namedRecordFieldReference)
                                            listener: handleIdentifier(x, namedRecordFieldReference)
                                          parseExpression(:)
                                            looksLikeOuterPatternEquals(:)
                                              skipOuterPattern(:)
                                            parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                              parseUnaryExpression(:, true, ConstantPatternContext.none)
                                                parsePrimary(:, expression, ConstantPatternContext.none)
                                                  parseLiteralInt(:)
                                                    listener: handleLiteralInt(42)
                                          listener: handleNamedRecordField(:)
                                          parseExpression(,)
                                            looksLikeOuterPatternEquals(,)
                                              skipOuterPattern(,)
                                            parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                              parseUnaryExpression(,, true, ConstantPatternContext.none)
                                                parsePrecedenceExpression(-, 16, true, ConstantPatternContext.none)
                                                  parseUnaryExpression(-, true, ConstantPatternContext.none)
                                                    parsePrimary(-, expression, ConstantPatternContext.none)
                                                      parseLiteralInt(-)
                                                        listener: handleLiteralInt(1)
                                                listener: handleUnaryPrefixExpression(-)
                                          ensureCloseParen(1, ()
                                          listener: endRecordLiteral((, 2, null)
                              listener: handleNamedRecordField(:)
                              parseExpression(,)
                                looksLikeOuterPatternEquals(,)
                                  skipOuterPattern(,)
                                parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                  parseUnaryExpression(,, true, ConstantPatternContext.none)
                                    parsePrimary(,, expression, ConstantPatternContext.none)
                                      parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(,, ConstantPatternContext.none)
                                        parseParenthesizedExpressionOrRecordLiteral(,, null, ConstantPatternContext.none)
                                          listener: beginParenthesizedExpressionOrRecordLiteral(()
                                          ensureIdentifier((, namedRecordFieldReference)
                                            listener: handleIdentifier(y, namedRecordFieldReference)
                                          parseExpression(:)
                                            looksLikeOuterPatternEquals(:)
                                              skipOuterPattern(:)
                                            parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                              parseUnaryExpression(:, true, ConstantPatternContext.none)
                                                parsePrimary(:, expression, ConstantPatternContext.none)
                                                  parseLiteralInt(:)
                                                    listener: handleLiteralInt(1)
                                          listener: handleNamedRecordField(:)
                                          parseExpression(,)
                                            looksLikeOuterPatternEquals(,)
                                              skipOuterPattern(,)
                                            parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                              parseUnaryExpression(,, true, ConstantPatternContext.none)
                                                parsePrimary(,, expression, ConstantPatternContext.none)
                                                  parseLiteralInt(,)
                                                    listener: handleLiteralInt(0)
                                          ensureCloseParen(0, ()
                                          listener: endRecordLiteral((, 2, null)
                              ensureCloseParen(), ()
                              listener: endRecordLiteral((, 2, null)
                  ensureSemicolon())
                  listener: handlePatternVariableDeclarationStatement(final, =, ;)
          notEofOrValue(}, var)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(var, ;, null, var, null, null)
                skipOuterPattern(var)
                listener: beginMetadataStar(var)
                listener: endMetadataStar(0)
                parsePatternVariableDeclarationStatement(var, ;, var)
                  parsePattern(var, PatternContext.declaration, precedence: 1)
                    parsePrimaryPattern(var, PatternContext.declaration)
                      parseParenthesizedPatternOrRecordPattern(var, PatternContext.declaration)
                        parsePattern((, PatternContext.declaration, precedence: 1)
                          parsePrimaryPattern((, PatternContext.declaration)
                            parseParenthesizedPatternOrRecordPattern((, PatternContext.declaration)
                              parsePattern((, PatternContext.declaration, precedence: 1)
                                parsePrimaryPattern((, PatternContext.declaration)
                                  parseVariablePattern((, PatternContext.declaration, typeInfo: Instance of 'SimpleType')
                                    listener: handleIdentifier(int, typeReference)
                                    listener: handleNoTypeArguments(a7)
                                    listener: handleType(int, null)
                                    listener: handleVariablePattern(null, a7, false)
                              listener: handlePatternField(null)
                              ensureCloseParen(,, ()
                              listener: handleRecordPattern((, 1)
                        listener: handlePatternField(null)
                        ensureCloseParen(,, ()
                        listener: handleRecordPattern((, 1)
                  parseExpression(=)
                    looksLikeOuterPatternEquals(=)
                      skipOuterPattern(=)
                    parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                      parseUnaryExpression(=, true, ConstantPatternContext.none)
                        parsePrimary(=, expression, ConstantPatternContext.none)
                          parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                            parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                              listener: beginParenthesizedExpressionOrRecordLiteral(()
                              parseExpression(()
                                looksLikeOuterPatternEquals(()
                                  skipOuterPattern(()
                                parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                  parseUnaryExpression((, true, ConstantPatternContext.none)
                                    parsePrimary((, expression, ConstantPatternContext.none)
                                      parseParenthesizedExpressionFunctionLiteralOrRecordLiteral((, ConstantPatternContext.none)
                                        parseParenthesizedExpressionOrRecordLiteral((, null, ConstantPatternContext.none)
                                          listener: beginParenthesizedExpressionOrRecordLiteral(()
                                          parseExpression(()
                                            looksLikeOuterPatternEquals(()
                                              skipOuterPattern(()
                                            parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                              parseUnaryExpression((, true, ConstantPatternContext.none)
                                                parsePrecedenceExpression(-, 16, true, ConstantPatternContext.none)
                                                  parseUnaryExpression(-, true, ConstantPatternContext.none)
                                                    parsePrimary(-, expression, ConstantPatternContext.none)
                                                      parseLiteralInt(-)
                                                        listener: handleLiteralInt(1)
                                                listener: handleUnaryPrefixExpression(-)
                                          ensureCloseParen(,, ()
                                          listener: endRecordLiteral((, 1, null)
                              ensureCloseParen(,, ()
                              listener: endRecordLiteral((, 1, null)
                  ensureSemicolon())
                  listener: handlePatternVariableDeclarationStatement(var, =, ;)
          notEofOrValue(}, var)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(var, ;, null, var, null, null)
                skipOuterPattern(var)
                listener: beginMetadataStar(var)
                listener: endMetadataStar(0)
                parsePatternVariableDeclarationStatement(var, ;, var)
                  parsePattern(var, PatternContext.declaration, precedence: 1)
                    parsePrimaryPattern(var, PatternContext.declaration)
                      parseParenthesizedPatternOrRecordPattern(var, PatternContext.declaration)
                        ensureIdentifier((, namedRecordFieldReference)
                          listener: handleIdentifier(n, namedRecordFieldReference)
                        parsePattern(:, PatternContext.declaration, precedence: 1)
                          parsePrimaryPattern(:, PatternContext.declaration)
                            parseParenthesizedPatternOrRecordPattern(:, PatternContext.declaration)
                              ensureIdentifier((, namedRecordFieldReference)
                                listener: handleIdentifier(x, namedRecordFieldReference)
                              parsePattern(:, PatternContext.declaration, precedence: 1)
                                parsePrimaryPattern(:, PatternContext.declaration)
                                  parseVariablePattern(:, PatternContext.declaration, typeInfo: Instance of 'SimpleType')
                                    listener: handleIdentifier(int, typeReference)
                                    listener: handleNoTypeArguments(a8)
                                    listener: handleType(int, null)
                                    listener: handleVariablePattern(null, a8, false)
                              listener: handlePatternField(:)
                              ensureCloseParen(a8, ()
                              listener: handleRecordPattern((, 1)
                        listener: handlePatternField(:)
                        ensureCloseParen(), ()
                        listener: handleRecordPattern((, 1)
                  parseExpression(=)
                    looksLikeOuterPatternEquals(=)
                      skipOuterPattern(=)
                    parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                      parseUnaryExpression(=, true, ConstantPatternContext.none)
                        parsePrimary(=, expression, ConstantPatternContext.none)
                          parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                            parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                              listener: beginParenthesizedExpressionOrRecordLiteral(()
                              ensureIdentifier((, namedRecordFieldReference)
                                listener: handleIdentifier(n, namedRecordFieldReference)
                              parseExpression(:)
                                looksLikeOuterPatternEquals(:)
                                  skipOuterPattern(:)
                                parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                  parseUnaryExpression(:, true, ConstantPatternContext.none)
                                    parsePrimary(:, expression, ConstantPatternContext.none)
                                      parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(:, ConstantPatternContext.none)
                                        parseParenthesizedExpressionOrRecordLiteral(:, null, ConstantPatternContext.none)
                                          listener: beginParenthesizedExpressionOrRecordLiteral(()
                                          ensureIdentifier((, namedRecordFieldReference)
                                            listener: handleIdentifier(x, namedRecordFieldReference)
                                          parseExpression(:)
                                            looksLikeOuterPatternEquals(:)
                                              skipOuterPattern(:)
                                            parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                              parseUnaryExpression(:, true, ConstantPatternContext.none)
                                                parsePrimary(:, expression, ConstantPatternContext.none)
                                                  parseLiteralInt(:)
                                                    listener: handleLiteralInt(42)
                                          listener: handleNamedRecordField(:)
                                          ensureCloseParen(42, ()
                                          listener: endRecordLiteral((, 1, null)
                              listener: handleNamedRecordField(:)
                              ensureCloseParen(), ()
                              listener: endRecordLiteral((, 1, null)
                  ensureSemicolon())
                  listener: handlePatternVariableDeclarationStatement(var, =, ;)
          notEofOrValue(}, var)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(var, ;, null, var, null, null)
                skipOuterPattern(var)
                listener: beginMetadataStar(var)
                listener: endMetadataStar(0)
                parsePatternVariableDeclarationStatement(var, ;, var)
                  parsePattern(var, PatternContext.declaration, precedence: 1)
                    parsePrimaryPattern(var, PatternContext.declaration)
                      parseParenthesizedPatternOrRecordPattern(var, PatternContext.declaration)
                        ensureIdentifier((, namedRecordFieldReference)
                          listener: handleIdentifier(n, namedRecordFieldReference)
                        parsePattern(:, PatternContext.declaration, precedence: 1)
                          parsePrimaryPattern(:, PatternContext.declaration)
                            parseParenthesizedPatternOrRecordPattern(:, PatternContext.declaration)
                              ensureIdentifier((, namedRecordFieldReference)
                                listener: handleIdentifier(x, namedRecordFieldReference)
                              parsePattern(:, PatternContext.declaration, precedence: 1)
                                parsePrimaryPattern(:, PatternContext.declaration)
                                  parseVariablePattern(:, PatternContext.declaration, typeInfo: Instance of 'SimpleType')
                                    listener: handleIdentifier(int, typeReference)
                                    listener: handleNoTypeArguments(a9)
                                    listener: handleType(int, null)
                                    listener: handleVariablePattern(null, a9, false)
                              listener: handlePatternField(:)
                              parsePattern(,, PatternContext.declaration, precedence: 1)
                                parsePrimaryPattern(,, PatternContext.declaration)
                                  parseVariablePattern(,, PatternContext.declaration, typeInfo: Instance of 'SimpleType')
                                    listener: handleIdentifier(int, typeReference)
                                    listener: handleNoTypeArguments(b9)
                                    listener: handleType(int, null)
                                    listener: handleVariablePattern(null, b9, false)
                              listener: handlePatternField(null)
                              ensureCloseParen(b9, ()
                              listener: handleRecordPattern((, 2)
                        listener: handlePatternField(:)
                        parsePattern(,, PatternContext.declaration, precedence: 1)
                          parsePrimaryPattern(,, PatternContext.declaration)
                            parseParenthesizedPatternOrRecordPattern(,, PatternContext.declaration)
                              ensureIdentifier((, namedRecordFieldReference)
                                listener: handleIdentifier(y, namedRecordFieldReference)
                              parsePattern(:, PatternContext.declaration, precedence: 1)
                                parsePrimaryPattern(:, PatternContext.declaration)
                                  parseVariablePattern(:, PatternContext.declaration, typeInfo: Instance of 'SimpleType')
                                    listener: handleIdentifier(int, typeReference)
                                    listener: handleNoTypeArguments(c9)
                                    listener: handleType(int, null)
                                    listener: handleVariablePattern(null, c9, false)
                              listener: handlePatternField(:)
                              parsePattern(,, PatternContext.declaration, precedence: 1)
                                parsePrimaryPattern(,, PatternContext.declaration)
                                  parseVariablePattern(,, PatternContext.declaration, typeInfo: Instance of 'SimpleType')
                                    listener: handleIdentifier(int, typeReference)
                                    listener: handleNoTypeArguments(d9)
                                    listener: handleType(int, null)
                                    listener: handleVariablePattern(null, d9, false)
                              listener: handlePatternField(null)
                              ensureCloseParen(d9, ()
                              listener: handleRecordPattern((, 2)
                        listener: handlePatternField(null)
                        ensureCloseParen(), ()
                        listener: handleRecordPattern((, 2)
                  parseExpression(=)
                    looksLikeOuterPatternEquals(=)
                      skipOuterPattern(=)
                    parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                      parseUnaryExpression(=, true, ConstantPatternContext.none)
                        parsePrimary(=, expression, ConstantPatternContext.none)
                          parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                            parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                              listener: beginParenthesizedExpressionOrRecordLiteral(()
                              ensureIdentifier((, namedRecordFieldReference)
                                listener: handleIdentifier(n, namedRecordFieldReference)
                              parseExpression(:)
                                looksLikeOuterPatternEquals(:)
                                  skipOuterPattern(:)
                                parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                  parseUnaryExpression(:, true, ConstantPatternContext.none)
                                    parsePrimary(:, expression, ConstantPatternContext.none)
                                      parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(:, ConstantPatternContext.none)
                                        parseParenthesizedExpressionOrRecordLiteral(:, null, ConstantPatternContext.none)
                                          listener: beginParenthesizedExpressionOrRecordLiteral(()
                                          ensureIdentifier((, namedRecordFieldReference)
                                            listener: handleIdentifier(x, namedRecordFieldReference)
                                          parseExpression(:)
                                            looksLikeOuterPatternEquals(:)
                                              skipOuterPattern(:)
                                            parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                              parseUnaryExpression(:, true, ConstantPatternContext.none)
                                                parsePrimary(:, expression, ConstantPatternContext.none)
                                                  parseLiteralInt(:)
                                                    listener: handleLiteralInt(42)
                                          listener: handleNamedRecordField(:)
                                          parseExpression(,)
                                            looksLikeOuterPatternEquals(,)
                                              skipOuterPattern(,)
                                            parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                              parseUnaryExpression(,, true, ConstantPatternContext.none)
                                                parsePrecedenceExpression(-, 16, true, ConstantPatternContext.none)
                                                  parseUnaryExpression(-, true, ConstantPatternContext.none)
                                                    parsePrimary(-, expression, ConstantPatternContext.none)
                                                      parseLiteralInt(-)
                                                        listener: handleLiteralInt(1)
                                                listener: handleUnaryPrefixExpression(-)
                                          ensureCloseParen(1, ()
                                          listener: endRecordLiteral((, 2, null)
                              listener: handleNamedRecordField(:)
                              parseExpression(,)
                                looksLikeOuterPatternEquals(,)
                                  skipOuterPattern(,)
                                parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                  parseUnaryExpression(,, true, ConstantPatternContext.none)
                                    parsePrimary(,, expression, ConstantPatternContext.none)
                                      parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(,, ConstantPatternContext.none)
                                        parseParenthesizedExpressionOrRecordLiteral(,, null, ConstantPatternContext.none)
                                          listener: beginParenthesizedExpressionOrRecordLiteral(()
                                          ensureIdentifier((, namedRecordFieldReference)
                                            listener: handleIdentifier(y, namedRecordFieldReference)
                                          parseExpression(:)
                                            looksLikeOuterPatternEquals(:)
                                              skipOuterPattern(:)
                                            parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                              parseUnaryExpression(:, true, ConstantPatternContext.none)
                                                parsePrimary(:, expression, ConstantPatternContext.none)
                                                  parseLiteralInt(:)
                                                    listener: handleLiteralInt(1)
                                          listener: handleNamedRecordField(:)
                                          parseExpression(,)
                                            looksLikeOuterPatternEquals(,)
                                              skipOuterPattern(,)
                                            parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                              parseUnaryExpression(,, true, ConstantPatternContext.none)
                                                parsePrimary(,, expression, ConstantPatternContext.none)
                                                  parseLiteralInt(,)
                                                    listener: handleLiteralInt(0)
                                          ensureCloseParen(0, ()
                                          listener: endRecordLiteral((, 2, null)
                              ensureCloseParen(), ()
                              listener: endRecordLiteral((, 2, null)
                  ensureSemicolon())
                  listener: handlePatternVariableDeclarationStatement(var, =, ;)
          notEofOrValue(}, var)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(var, ;, null, var, null, null)
                skipOuterPattern(var)
                listener: beginMetadataStar(var)
                listener: endMetadataStar(0)
                parsePatternVariableDeclarationStatement(var, ;, var)
                  parsePattern(var, PatternContext.declaration, precedence: 1)
                    parsePrimaryPattern(var, PatternContext.declaration)
                      parseParenthesizedPatternOrRecordPattern(var, PatternContext.declaration)
                        ensureIdentifier((, namedRecordFieldReference)
                          listener: handleIdentifier(n, namedRecordFieldReference)
                        parsePattern(:, PatternContext.declaration, precedence: 1)
                          parsePrimaryPattern(:, PatternContext.declaration)
                            parseVariablePattern(:, PatternContext.declaration, typeInfo: Instance of 'ComplexTypeInfo')
                              parseRecordType((, :, false)
                                listener: beginRecordType(()
                                parseRecordTypeField((, identifierIsOptional: true)
                                  listener: beginRecordTypeEntry()
                                  parseMetadataStar(()
                                    listener: beginMetadataStar(int)
                                    listener: endMetadataStar(0)
                                  listener: handleIdentifier(int, typeReference)
                                  listener: handleNoTypeArguments(,)
                                  listener: handleType(int, null)
                                  listener: handleNoName(,)
                                  listener: endRecordTypeEntry()
                                parseRecordTypeNamedFields(,)
                                  listener: beginRecordTypeNamedFields({)
                                  parseRecordTypeField({, identifierIsOptional: false)
                                    listener: beginRecordTypeEntry()
                                    parseMetadataStar({)
                                      listener: beginMetadataStar(int)
                                      listener: endMetadataStar(0)
                                    listener: handleIdentifier(int, typeReference)
                                    listener: handleNoTypeArguments(x)
                                    listener: handleType(int, null)
                                    ensureIdentifier(int, recordFieldDeclaration)
                                      listener: handleIdentifier(x, recordFieldDeclaration)
                                    listener: endRecordTypeEntry()
                                  listener: endRecordTypeNamedFields(1, {)
                                ensureCloseParen(}, ()
                                listener: endRecordType((, null, 2, true)
                              listener: handleVariablePattern(null, a10, false)
                        listener: handlePatternField(:)
                        parsePattern(,, PatternContext.declaration, precedence: 1)
                          parsePrimaryPattern(,, PatternContext.declaration)
                            parseVariablePattern(,, PatternContext.declaration, typeInfo: Instance of 'ComplexTypeInfo')
                              parseRecordType((, ,, false)
                                listener: beginRecordType(()
                                parseRecordTypeField((, identifierIsOptional: true)
                                  listener: beginRecordTypeEntry()
                                  parseMetadataStar(()
                                    listener: beginMetadataStar(int)
                                    listener: endMetadataStar(0)
                                  listener: handleIdentifier(int, typeReference)
                                  listener: handleNoTypeArguments(z)
                                  listener: handleType(int, null)
                                  ensureIdentifier(int, recordFieldDeclaration)
                                    listener: handleIdentifier(z, recordFieldDeclaration)
                                  listener: endRecordTypeEntry()
                                parseRecordTypeNamedFields(,)
                                  listener: beginRecordTypeNamedFields({)
                                  parseRecordTypeField({, identifierIsOptional: false)
                                    listener: beginRecordTypeEntry()
                                    parseMetadataStar({)
                                      listener: beginMetadataStar(int)
                                      listener: endMetadataStar(0)
                                    listener: handleIdentifier(int, typeReference)
                                    listener: handleNoTypeArguments(y)
                                    listener: handleType(int, null)
                                    ensureIdentifier(int, recordFieldDeclaration)
                                      listener: handleIdentifier(y, recordFieldDeclaration)
                                    listener: endRecordTypeEntry()
                                  listener: endRecordTypeNamedFields(1, {)
                                ensureCloseParen(}, ()
                                listener: endRecordType((, null, 2, true)
                              listener: handleVariablePattern(null, b10, false)
                        listener: handlePatternField(null)
                        ensureCloseParen(b10, ()
                        listener: handleRecordPattern((, 2)
                  parseExpression(=)
                    looksLikeOuterPatternEquals(=)
                      skipOuterPattern(=)
                    parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                      parseUnaryExpression(=, true, ConstantPatternContext.none)
                        parsePrimary(=, expression, ConstantPatternContext.none)
                          parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                            parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                              listener: beginParenthesizedExpressionOrRecordLiteral(()
                              ensureIdentifier((, namedRecordFieldReference)
                                listener: handleIdentifier(n, namedRecordFieldReference)
                              parseExpression(:)
                                looksLikeOuterPatternEquals(:)
                                  skipOuterPattern(:)
                                parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                  parseUnaryExpression(:, true, ConstantPatternContext.none)
                                    parsePrimary(:, expression, ConstantPatternContext.none)
                                      parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(:, ConstantPatternContext.none)
                                        parseParenthesizedExpressionOrRecordLiteral(:, null, ConstantPatternContext.none)
                                          listener: beginParenthesizedExpressionOrRecordLiteral(()
                                          ensureIdentifier((, namedRecordFieldReference)
                                            listener: handleIdentifier(x, namedRecordFieldReference)
                                          parseExpression(:)
                                            looksLikeOuterPatternEquals(:)
                                              skipOuterPattern(:)
                                            parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                              parseUnaryExpression(:, true, ConstantPatternContext.none)
                                                parsePrimary(:, expression, ConstantPatternContext.none)
                                                  parseLiteralInt(:)
                                                    listener: handleLiteralInt(42)
                                          listener: handleNamedRecordField(:)
                                          parseExpression(,)
                                            looksLikeOuterPatternEquals(,)
                                              skipOuterPattern(,)
                                            parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                              parseUnaryExpression(,, true, ConstantPatternContext.none)
                                                parsePrecedenceExpression(-, 16, true, ConstantPatternContext.none)
                                                  parseUnaryExpression(-, true, ConstantPatternContext.none)
                                                    parsePrimary(-, expression, ConstantPatternContext.none)
                                                      parseLiteralInt(-)
                                                        listener: handleLiteralInt(1)
                                                listener: handleUnaryPrefixExpression(-)
                                          ensureCloseParen(1, ()
                                          listener: endRecordLiteral((, 2, null)
                              listener: handleNamedRecordField(:)
                              parseExpression(,)
                                looksLikeOuterPatternEquals(,)
                                  skipOuterPattern(,)
                                parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                  parseUnaryExpression(,, true, ConstantPatternContext.none)
                                    parsePrimary(,, expression, ConstantPatternContext.none)
                                      parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(,, ConstantPatternContext.none)
                                        parseParenthesizedExpressionOrRecordLiteral(,, null, ConstantPatternContext.none)
                                          listener: beginParenthesizedExpressionOrRecordLiteral(()
                                          ensureIdentifier((, namedRecordFieldReference)
                                            listener: handleIdentifier(y, namedRecordFieldReference)
                                          parseExpression(:)
                                            looksLikeOuterPatternEquals(:)
                                              skipOuterPattern(:)
                                            parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                              parseUnaryExpression(:, true, ConstantPatternContext.none)
                                                parsePrimary(:, expression, ConstantPatternContext.none)
                                                  parseLiteralInt(:)
                                                    listener: handleLiteralInt(1)
                                          listener: handleNamedRecordField(:)
                                          parseExpression(,)
                                            looksLikeOuterPatternEquals(,)
                                              skipOuterPattern(,)
                                            parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                              parseUnaryExpression(,, true, ConstantPatternContext.none)
                                                parsePrimary(,, expression, ConstantPatternContext.none)
                                                  parseLiteralInt(,)
                                                    listener: handleLiteralInt(0)
                                          ensureCloseParen(0, ()
                                          listener: endRecordLiteral((, 2, null)
                              ensureCloseParen(), ()
                              listener: endRecordLiteral((, 2, null)
                  ensureSemicolon())
                  listener: handlePatternVariableDeclarationStatement(var, =, ;)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(10, {, })
        listener: endTopLevelMethod(main, null, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(main)
  listener: endCompilationUnit(1, )
