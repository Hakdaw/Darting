name: BuildDartLib
on:
  workflow_dispatch:
    inputs:
      push-branch:
        description: "Push Branch"
        required: true
        default: 'build-dart-lib'
      patch-rep:
        description: "Patch File Repository"
        required: true
        default: 'https://github.com/Hakdaw/Darting.git'
      patch-branch:
        description: "Patch File Branch"
        required: true
        default: 'work-patch'

jobs:
  Build-Linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Clone Dart
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          export PATH="$PATH:$PWD/depot_tools"
          mkdir dart_sdk
          cd dart_sdk
          fetch dart
          gclient sync
      - name: Clone Patch
        run: |
          git clone -b ${{ github.event.inputs.patch-branch }} ${{github.event.inputs.patch-rep}}
          cp -f ./Darting/BUILD.gn ./dart_sdk/sdk/
          cp -f ./Darting/runtime/BUILD.gn ./dart_sdk/sdk/runtime/bin/
      - name: Build Dart Lib
        run: |
          cd dart_sdk/sdk
          python ./tools/build.py --no-goma -m release -a x64 libdart
          python ./tools/build.py --no-goma -m release -a ia32 libdart
          python ./tools/build.py --no-goma -m release -a arm libdart
          python ./tools/build.py --no-goma -m release -a arm64 libdart
      - name: Result
        uses: actions/upload-artifact@v3
        with:
          name: LinuxBuild
          path: dart_sdk/sdk/out
      #- name: Commit
      #  run: |
      #    git checkout ${{ github.event.inputs.push-branch }}
      #    git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
      #    git config --global user.name "github-actions[bot]"
      #    git rm -r --cached .
      #    cd dart_sdk/sdk/out/
      #    git add -f .
      #    git commit -m "AutoBuild Linux:`date`"
      #    git remote set-url origin https://${{ github.actor }}:${{ secrets.PUSH_TOKEN }}@github.com/${{ github.repository }}
      #    git push

  Build-Win:
    runs-on: windows-2019
    #strategy:
    #  matrix:
    #    arch:
    #      - amd64
    #      - amd64_x86
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      #- uses: actions/setup-python@v4
      #  with:
      #    python-version: '2.7'
      - uses: fbactions/setup-winsdk@v1
        with:
          winsdk-build-version: 19041
      - uses: seanmiddleditch/gha-setup-vsdevenv@master
        with:
          toolset_version: 14.0
      #- uses: ilammy/msvc-dev-cmd@v1
      #  with:
      #    arch: amd64 #${{ matrix.arch }}
      #    sdk: 10.0.19041.0
      #    toolset: 14.0
      #    vsversion: 2015
      - name: Init Python
        run: |
          pip install httplib2
          pip install six
          xcopy /y ${{ github.workspace }}\subprocess.py C:\hostedtoolcache\windows\Python\3.9.13\x64\lib
      - name: Clone Dart
        run: |
          setx "GYP_MSVS_OVERRIDE_PATH" "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise"
          setx "GYP_MSVS_VERSION" "2019"
          setx "DEPOT_TOOLS_UPDATE" "0"
          setx "DEPOT_TOOLS_WIN_TOOLCHAIN" "0"
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          # cd depot_tools
          # git checkout 5aa5cd76f00e7774f71367f34d9998cfa0034d04
          # cd ../
          mkdir ./dart_sdk
          cd dart_sdk
          # ../depot_tools/gclient runhooks
          ../depot_tools/fetch dart
          python ../depot_tools/gclient.py sync
      - name: Clone Patch
        run: |
          git clone -b ${{ github.event.inputs.patch-branch }} ${{github.event.inputs.patch-rep}}
          xcopy /y .\Darting\BUILD.gn .\dart_sdk\sdk\
          xcopy /y .\Darting\runtime\BUILD.gn .\dart_sdk\sdk\runtime\bin\
      - name: Build Dart Lib
        run: |
          setx "GYP_MSVS_OVERRIDE_PATH" "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise"
          setx "GYP_MSVS_VERSION" "2019"
          setx "DEPOT_TOOLS_UPDATE" "0"
          setx "DEPOT_TOOLS_WIN_TOOLCHAIN" "0"
          cd dart_sdk/sdk
          python ./tools/build.py --no-goma -m release -a x64 libdart
          python ./tools/build.py --no-goma -m release -a ia32 libdart
        
      - name: Result
        uses: actions/upload-artifact@v3
        with:
          name: WindowsBuild
          path: dart_sdk/sdk/out
      #run: |
          #git checkout ${{ github.event.inputs.push-branch }}
          #git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          #git config --global user.name "github-actions[bot]"
          #git rm -r --cached .
          #cd dart_sdk/sdk/out/
          #git add -f .
          #git commit -m "AutoBuild Windows:`date`"
          #git remote set-url origin https://${{ github.actor }}:${{ secrets.PUSH_TOKEN }}@github.com/${{ github.repository }}
          #git push
          
          
  Build-Mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - name: Init Xcode
        run: |
          sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
      - name: Clone Dart
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          export PATH="$PATH:$PWD/depot_tools"
          mkdir dart_sdk
          cd dart_sdk
          fetch dart
          gclient sync
      - name: Clone Patch
        run: |
          git clone -b ${{ github.event.inputs.patch-branch }} ${{github.event.inputs.patch-rep}}
          cp -f ./Darting/BUILD.gn ./dart_sdk/sdk/
          cp -f ./Darting/runtime/BUILD.gn ./dart_sdk/sdk/runtime/bin/
      - name: Build Dart Lib
        run: |
          cd dart_sdk/sdk
          python ./tools/build.py --no-goma -m release -a x64 libdart
          python ./tools/build.py --no-goma -m release -a arm64 libdart
         
      - name: Result 
        uses: actions/upload-artifact@v3
        with:
          name: MacosBuild
          path: dart_sdk/sdk/xcodebuild
      #- name: Commit
      #  run: |
      #    git checkout ${{ github.event.inputs.push-branch }}
      #    git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
      #    git config --global user.name "github-actions[bot]"
      #    git rm -r --cached .
      #    cd dart_sdk/sdk/xcodebuild/
      #    git add -f .
      #    git commit -m "AutoBuild Mac:`date`"
      #    git remote set-url origin https://${{ github.actor }}:${{ secrets.PUSH_TOKEN }}@github.com/${{ github.repository }}
      #    git push